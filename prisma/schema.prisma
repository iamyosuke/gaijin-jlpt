// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  progress      UserProgress[]
  wordStatus    UserWordStatus[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  @@map("users")
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Level {
  id    Int    @id @default(autoincrement())
  name  String
  order Int
  words Word[]
  progress UserProgress[]
}

model Word {
  id         Int      @id @default(autoincrement())
  level      Level    @relation(fields: [levelId], references: [id])
  levelId    Int
  kanji      String?
  furigana   String
  meaningEn  String
  audioUrl   String?
  examples   Example[]
  wordStatus UserWordStatus[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Example {
  id        Int    @id @default(autoincrement())
  word      Word   @relation(fields: [wordId], references: [id])
  wordId    Int
  sentence  String
  meaningEn String
  audioUrl  String?
}

model UserProgress {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  level     Level   @relation(fields: [levelId], references: [id])
  levelId   Int
  completed Boolean
  progress  Int
  updatedAt DateTime @updatedAt
}

model UserWordStatus {
  id            Int    @id @default(autoincrement())
  user          User   @relation(fields: [userId], references: [id])
  userId        String
  word          Word   @relation(fields: [wordId], references: [id])
  wordId        Int
  status        Status
  lastReview    DateTime?
  correctCount  Int
  incorrectCount Int
}

enum Status {
  unknown
  learning
  learned
}
